plugins {
  id "java"
  id "application"
  id "pmd"
  id "build-dashboard"
  id "com.github.jakemarsden.git-hooks" version "0.0.2"
}

pmd {
  toolVersion = "6.23.0"
  ignoreFailures = false
  ruleSets = []
  ruleSetConfig = resources.text.fromFile("pmd.xml")
}

pmdMain {
  reports {
    html {
      enabled = true
    }
  }
}

pmdTest {
  reports {
    html {
      enabled = true
    }
  }
}

gitHooks {
  hooks = ["pre-commit": "build check"]
  hooks = ["pre-push": "build check test"]
}

repositories {
  jcenter()
}

ext {
  springV = "5.2.6.RELEASE"
  commonsV = "3.10"
  logbackV = "1.2.3"
  slf4jV = "1.7.30"
  mockitoV = "1.10.19"
  junitV = "5.6.0"
  findBugsAnnotationsV = "3.0.1"
}

dependencies {

  implementation "org.springframework:spring-core:${springV}"
  implementation "org.springframework:spring-beans:${springV}"
  implementation "org.springframework:spring-context:${springV}"

  implementation "org.apache.commons:commons-lang3:${commonsV}"

  implementation "ch.qos.logback:logback-core:${logbackV}"
  implementation "ch.qos.logback:logback-classic:${logbackV}"
  implementation "org.slf4j:slf4j-api:${slf4jV}"

  testImplementation "org.springframework:spring-test:${springV}"

  testImplementation "org.mockito:mockito-all:${mockitoV}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitV}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitV}"


  implementation "com.google.code.findbugs:findbugs-annotations:${findBugsAnnotationsV}"
}

application {
  applicationDefaultJvmArgs = ["-Dspring.config.location=file:./config/application.properties"]
  mainClassName = "io.github.rmuhamedgaliev.App"
}

applicationDistribution.from("config") {
  into "config"
}

test {
  jvmArgs "-Dspring.config.location=classpath:application.properties"
  useJUnitPlatform()
}

compileJava {
  options.incremental = true
}
